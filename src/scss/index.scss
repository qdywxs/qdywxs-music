$backgroundColor: #060a3d;
$color: #fff;  /*字的颜色*/
$color1: #868aaf;  /*灰色字的颜色*/
$color2: #db3baa;  /*亮粉色*/

$color2-dark: darken($color2, 10%);
$color2-darker: darken($color2, 30%);

$color3: #0025f1;

* {
  margin: 0;
  padding: 0;
}


#player {
  height: 100vh;  /*❗️给界面加个高度，移动端用视口单位 vw、vh。100vh 就可以撑满屏幕；*/
  background: $backgroundColor;
  overflow: hidden;
  
  .header {
    text-align: center;  /*水平居中*/
    height: 110px;  /*❗️固定死 header 的高度*/
    h1 {
      color: $color;
      font-size: 20px;
      padding-top: 20px;  /*❗️注意不能用 margin-top: 20px; 。
                          一旦用了，会产生“外边距”合并问题——产生缝隙！*/
    }
    
    p {
      color: $color1;
      font-size: 12px;
    }
    
    .balls {
      display: flex;  /*❗️移动端我们要避免去用“浮动”，要采用 Flex 布局。*/
      
      justify-content: center;
      align-items: center;  /*❗️这两行代码在实战中的“万金油”，
                            用于 Flex 的“水平”、“垂直”居中。*/
      
      margin-top: 20px;  /*整体加一个 margin ，拉开距离。*/
      
      span {
        display: block;  /*❗️也可以用 display: inline-block; 。
                         span 是行内元素，直接加宽高不起作用！*/
        width: 5px;
        height: 5px;
        border-radius: 50%;  /*变为“圆”*/
        background: $color2-darker;
        margin: 0 4px;

        &.current {  /*🏆& 是指 span ，这样的写法表示：又是 span，又是 current。*/
          width: 8px;
          height: 8px;
          background: $color2;
        }
      }
      
    }
  }


  .panels {
    width: 200vw;
    height: calc(100vh - 270px);
    display: flex;
    
    transition: transform 0.3s;
    align-items: center;

    &.panel1 {
      transform: translateX(0vw);
    }

    &.panel2 {
      transform: translateX(-100vw);
    }
    .panel-effect {
      width: 100vw;
      height: 100%;
      display: flex;
      flex-direction: column;
      justify-content: center;

      .effect {
        position: relative;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 40vh;

        >div {
          background-size: contain;
          position: absolute;
        }

        .effect-1 {
          background: url(../svg/effect-no-move.svg) 0 0 no-repeat;
          width: 70vw;
          height: 70vw;
          animation: rotate 20s linear infinite;
        }

        .effect-2 {
          background: url(../svg/effect-move1.svg) 0 0 no-repeat;
          width: 60vw;
          height: 60vw;
          animation: rotate 10s linear infinite reverse;
        }

        .effect-3 {
          background: url(../svg/effect-move2.svg) 0 0 no-repeat;
          width: 24vw;
          height: 24vw;
          animation: rotate 10s linear infinite;
        }
      }

      .lyric {
        text-align: center;
        p {
          font-size: 14px;
          color: $color1;
          margin-top: 8px;

          &.current {
            color: $color;
          }
        }
      }
    }

    .panel-lyrics {
      width: 100vw;
      height: calc(100% - 40px);
      text-align: center;
      overflow: hidden;

      .container {
        transition: all .4s;


        p {
          color: $color1;
          line-height: 2;
          font-size: 14px;

          &.current {
            color: $color;
          }
        }
      }

    }

  }

  .footer {
    height: 160px;
    .buttons {
      display: flex;
      justify-content: center;
  
      svg {
        width: 24px;
        height: 24px;
        margin: 0 20px;
      }
    }

    .bar-area {
      color: $color1;
      font-size: 12px;
      display: flex;
      padding: 0 20px;
      margin-top: 20px;
      align-items: center;
      
      .time-start {
        order: 1;  /*❗️位置放在第一个；*/
        width: 40px;
      }
      
      .time-end {
        order: 3;  /*❗️位置放在第三个；*/
        width: 40px;
      }
      
      .bar {
        order: 2;  /*❗️位置放在第二个；*/
        flex: 1;  /*❗️自动撑开；*/
        height: 4px;
        background: $color3;
        border-radius: 2px;
        margin: 0 10px;
        
        .progress {
          width: 0%;
          transition: all .2s;
          height: 100%;  /*❗️撑满父亲（因为 .bar 设置了高度 4px，所以这里可以直接 100%）*/
          border-radius: 2px;
          background: $color2;
          position: relative;
  
          &::after {
            content: '';
            position: absolute;
            right: -8px;
            top: -7px;
            display: block;
            width: 16px;
            height: 16px;
            background: url(../svg/progress.svg) 0 0 no-repeat;  /*❗️背景图片的形式*/
            background-size: contain;
          }
        }
      }
    }    

    .actions {
      display: flex;
      align-items: center;
      justify-content: space-between;
      margin-top: 20px;
      padding: 0 20px;
  
      svg {
        width: 28px;
        height: 28px;
  
        &.btn-play-pause {
          width: 50px;
          height: 50px;       
        }
      }
    }

  }  

}


@keyframes rotate {
  0% {
    transform: rotate(0)
  }
  100% {
    transform: rotate(360deg)
  }
}